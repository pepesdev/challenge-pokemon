version: '3.9'

services:
  api_pokemon:
    container_name: api_pokemon
    image: api-soap-pokemon:1.0.0
    build: 
      context: ./api-pokemon-soap
    ports:
      - 8080:8080
    environment:
      DATABASE_URL: jdbc:postgresql://postgres_db:5432/postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
    depends_on:
      - postgres_db

  postgres_db:
    container_name: postgres_db
    image: postgres:15
    ports:
       - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  api_log:
    container_name: api_log
    image: api-log:1.0.0
    build: 
      context: ./request-log
    ports: 
      - 8090:8090
    environment:
      DATABASE_URL: jdbc:postgresql://postgres_db:5432/postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
    depends_on:
      - postgres_db
  sonar_qube:
    container_name: sonar_qube
    image: sonarqube:9.9.7-community
    depends_on: 
       - postgres_db
    environment: 
      SONAR_JDBC_URL:  jdbc:postgresql://postgres_db:5432/postgres
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: postgres
      SONAR_JDBC_SEARCH_JAVAADITIONALS: "-Dnode.store.allow_mmap=false, -Ddiscovery.type=single-node"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - 9000:9000
volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs: